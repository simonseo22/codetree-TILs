// *문제
// n*n 학생을 n*n크기의 놀이기구에 탑승, 처음에는 모든 칸이 비어있음 (r,c)는 r행 c열 의미
// 각 학생별로 좋아하는 학생이 4명씩 정해짐, 자기 자신을 좋아하는 학생은 없고, 
// 동일한 학생에 대해 좋아하는 번호가 중복X ( 4명의 다른 학생을 좋아함)
// 학생은 주어진 순서대로 다음 조건에 따라 우선순위가 높은 칸에 탑승하려함
// 1) 격자를 벗어나지 않는 4방향으로 인접한 칸 중 좋아하는 친구의 수가 가장 많은 위치로 이동
// 2) 1번 조건을 만족하는 칸의 위치가 여러곳이면 그 인접한 칸중 비어있는 칸의 수가 가장 많은 위치로 이동
// 단 이때 격자를 벗어나는 칸은 비어있는 칸으로 간주X
// 3) 2번 조건 까지 동일한 위치가 여러곳이면 그 중 행 번호가 가장 작은 위치로 이동
// 4) 3번조건까지 동일하면 열 번호가 가장 작은 위치로 이동
// 최종 점수는 모든 학생들이 탑승한 후 각 학생마다의 점수를 합한 점수
// 각 학생의 점수는 해당 학생의 인접한 곳에 앉아있는 좋아하는 친구의 수
// 0:0, 1:1, 2:10, 3:100, 4:1000
// 들어오는 학생의 순서와 각 학생마다 좋아하는 4명의 번호가 주어질때 최종 점수를 구하는 프로그램

// *입력
// 1) 격자의 크기 n
// 2~n*n) 각 학생의 정보 n0~n4가 공백으로 주어짐, n0 : 지금 턴에 탑승하는 학생 번호
// n1~n4 : n0학생이 좋아하는 학생의 번호, n0~n4는 전부 다른 숫자, 1이상 n*n이하
// n*n 줄에서 n0은 서로 겹치지 않음

// *출력
// 모든 학생이 탑승한 이유 최종 점수


#include <iostream>

int main() {
    // 여기에 코드를 작성해주세요.
    return 0;
}