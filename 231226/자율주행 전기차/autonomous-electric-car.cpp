// *
// 배터리 모두 소모시 움직일수 없음
// n*n격자 도로, 배터리양, 벽의위치 , m명의 승객의 위치
// 주어진 배터리 용량으로  승객을 모두 태울수 있는지 test
// 출발지 -> 승객 -> 목적지 항상 최단거리 이동
// 한칸 이동시 배터리 1 소요
// 승객을 목적지에 태워주면 승객을 태워 이동하며 소모된 배터리의2배만큼 충전후 다시 이동
// 이동 중 배터리가 모두 소모되면 그 즉시 종료
// 승객을 목적지로 이동 후 배터리가 모두 소모되면 소모된 배터리의 2배만큼 다시 충전후 운행재개 가능
// 마지막 승객을 태운후 운행을 종료하는 순간에도 충전은 이뤄짐
// 여러명의 승객 -> 최단 거리가 가장 짧은 승객을 먼저 태움(여러명이면 가장 위, 왼쪽 승객을 먼저)

// 도로의 상태가 주어질때 모든 승객을 성공적으로 데려다 줄수 있는지 여부
// 데려다 줄수 있다면 최종적으로 남은 배터리의 양 출력

//*
// 1) 격자크기 n(2~20), 승객수 m(1~n^2), 초기 배터리 충전량 c(1~500,000)
// 2~n+1) 도로정도 0 : 도로, 1 : 벽
// n+2) 자율주행 전기차 초기 위치 정보 x, y
// n+3~n+3+m-1) m개 승객에 출발지 위치 정보 x_s, y_s 도착지 위치정보 x_e, y_e
// (출발지, 도착지는 1이상 n이하의 자연수)

//모든 승객의 출발지와 목적지는 빈칸으로 가정해도 좋습니다. -> 벽일 일은 어 ㅄ다.
// 각 승객의 출발지와 목적지는 모두 다르다고 가정해도 좋습니다. -> 출-목이 겹치지 않는다.
// 단 한 승객의 출발지와 다른 승객의 목적지는 같을 수 있습니다. -> 목적지에 내려준후 바로 픽업 가능
// 서로 다른 승객의 출발지가 동일한 경우는 없다고 가정해도 좋습니다. -> 한곳에서 여러명을 픽업하는 경우는 없음

#include <iostream>

int main() {
    // 여기에 코드를 작성해주세요.
    return 0;
}