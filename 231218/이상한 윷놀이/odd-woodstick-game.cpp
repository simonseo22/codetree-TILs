// n*n격자판 흰,빨,파 3가지중 하나의 색
// k개의 말(이동방향 또한 정해짐), 격자판 한 지점에 놓여있음, 4방향 이동가능(거리 1칸)
// 1턴동안 1~k번 말까지 순서대로 아래 규칙대로 움직임
// 1) 이동하려는 칸이 흰색이면 해당 칸이동
// * 다른 말이 있는 경우 해당 말 위에 올려둠 ( 이미 말이 올려져 있으면 그 위에)
// 2) 이동하려는 칸이 빨간색인 경우 이전하기 전 순서를 뒤집음(쌓여있는), 
// (이미 말이 있으면 흰색칸과 같이위에 올려둠)
// 3) 이동하려는 칸이 파란색인 경우 이동하지 않고 방향을 반대로 전환후 이동
// 방향 변경후 이동하려는 칸도 파란색이면 방향만 전환하고 가만히
// 다른 말이 쌓여 있으면 이동하는 말만!! 방향변경
// 4) 격자판의 범위를 벗어나는 이동일 경우 파란색과 동일하게 방향이 변경되어 이동
// 5) 쌓여있는 말 이동시 위에 있는 말 함께 이동

// 게임 진행중 1턴이 다 끝나지 않더라도 말이 4개 이상 겹쳐지면 그 즉시 게임 종료
// (초기 상태로 4개이상이 겹치는 경우는 주어지지 않음)
// 격자판 상태, 말의 위치, 이동방향이 주어질때 게임 종료순간 턴의 번호

//* 입력형식
// 1) 윷놀이 판의 크기 n(4~12), 말의 개수 k ( 4~10)
// 2~n+1) 윷놀이 판의 정보, 0 : 흰, 1 : 빨, 2:파
// n+2~n+2+(k-1) ) 말의 정보 위치 x,y 방향 d (1 : 오른쪽 , 2 : 왼쪽 3 : 위, 4 : 아래)
// *같은 칸의 2개의 말이 입력으로 주어지는 경우는 없다고 가정

// *출력형식
// 종료되는 턴의 번호 출력, 1000보다 크거나 불가능한 경우 -1 출력
#include <iostream>

int main() {
    // 여기에 코드를 작성해주세요.
    return 0;
}